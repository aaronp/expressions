app {

  # the REST server settings
  host: "0.0.0.0"
  port: 8080
  logHeaders: true
  logBody: false
  recordRequestResponse: false

  # the file system path where the 'Disk' route (e.g. POST rest/store/x/y.z) stores files
  # See Disk.Service
  #
  disk: "."

  # the place where files will be used to resolved by the message context.
  # see FileSystem
  # eg 'fs.foo/token.jwt'
  data: ${app.disk}

  # a list of topic to mapping script paths:
  #
  # e.g.
  # mapping : {
  #   foo* : "path/to/foo.sc"
  #   bar  : "bar.sc"
  # }
  mapping {

  }

  www {
    # if set to a non-empty value, the www artifacts (scripts, css, etc) from the packaged jar will be extracted to this
    # directory. They can then be referenced by 'htmlDir', 'cssDir', 'jsDir', etc.
    #
    # This directory will be created if it does not exist.
    #
    # e.g.
    #
    # extractTo = "./web"
    extractTo: ""

    # the path to the html files to serve
    htmlDir: ${app.www.extractTo}

    # the relative path under the html root directory for the default landing page
    landingPage: "/index.html"

    # the path to the javascript resources
    jsDir: ${app.www.htmlDir}"/js"


    # the path to the css resources
    cssDir: ${app.www.htmlDir}"/css"

    # see StaticFileRoutes -- this allows us to map requests for e.g.
    # /js/app.js to either
    # our-app-fastopt.js or
    # or
    # our-app-opt.js
    # for different environments
    #
    # e.g.
    #
    # "app.js": "client-js-fastopt/main.js"
    # "app-deps.js": "client-js-fastopt.js"
    #
    resourceMapping: {
    }
  }
}