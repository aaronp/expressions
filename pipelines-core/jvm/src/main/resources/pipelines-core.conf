# The TLS config for providing https connections
pipelines {
  tls {
    userHash: {
      salt: "UsrHsh"
      iterationCount = 65536
      keyLen = 128
    }

    # The path to the p12 server certificate
    certificate: ""
    certificate: ${?CERT}

    # the hostname used for the certificate
    hostname : ""
    hostname : ${?CERT_HOST}

    password: ""
    password: ${?CERT_PWD}

    seed: ""
    seed: ${?TLS_SEED}


    gen {
      # This can be set to a directory which is assumed to be the output of a first, no-args run.
      # By that I mean the 'GenCerts' script will populate some CA and CRT directories with its scripts,
      # which can then be customized and pointed to using 'caDir' to regenerate new certs with the updated
      caDir: ""

      # the path to th caCert file to use if we're having to generate a certificate
      caCertPath: ""
    }
  }

  # see pipelines.users.LoginHandler
  users {

    # the fully-qualified classname of a class implementing pipelines.users.LoginHandler
    #
    # which should either have a single-arg typesafe config argument, in which case this 'pipeline.users' config
    # will be passed in, or a no-arg constructor
    loginHandler: "pipelines.users.LocalUsers"

    sessionDuration: "2h"

    # setting for 'local' user configurations, read by the pipelines.users.LocalUsers handler
    #
    #
    local {
      createIfNotExists: true
      dir: ".local-users"
    }


    # settings for the 'FixedUserHandler' -- the entries will be <user> : <password> pairs
    fixed {
      admin: admin
      guest: password
    }
  }

}
